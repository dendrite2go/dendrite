version: '3.7'

networks:
  example:
    driver: overlay

services:
  axon-server:
    image: axoniq/axonserver:${AXON_VERSION}
    init: true
    networks:
    - example
    ports:
    - target: 8024
      published: ${AXON_SERVER_PORT}
    expose:
    - "8024"
    - "8124"
    volumes:
    -
      type: volume
      source: axon-data
      target: /opt/axonserver/data
  example-command-api:
    image: jeroenvm/archetype-go-axon
    working_dir: ${PROJECT}
    command:
      - "target/bin/example"
    init: true
    hostname: example
    networks:
    - example
    ports:
    - target: 8181
      published: ${API_SERVER_PORT}
    depends_on:
    - axon-server
    volumes:
      - type: volume
        source: jeroenvm-nix-store
        target: /nix/store
      #${EXTRA_VOLUMES}
  example-present:
    image: ${DOCKER_REPOSITORY}/example-present:${EXAMPLE_IMAGE_VERSION}${PRESENT_SUFFIX}
    networks:
      - example
    expose:
      - "3000"
    depends_on:
      - axon-server
    #${PRESENT_VOLUMES}
  example-proxy:
    image: ${DOCKER_REPOSITORY}/example-proxy:${EXAMPLE_IMAGE_VERSION}
    networks:
      - example
    ports:
      - target: 80
        published: ${UI_SERVER_PORT}
    depends_on:
      - example-command-api
      - axon-server
  grpc-swagger:
    image: ${DOCKER_REPOSITORY}/grpc-swagger
    networks:
      - example
    ports:
      - target: '8080'
        published: '8123'
  elastic-search:
    image: elasticsearch:${ELASTIC_SEARCH_VERSION}
    init: true
    networks:
      - example
    ports:
    - target: '9200'
      published: '9200'
    - target: '9300'
      published: '9300'
    environment:
      - "discovery.type=single-node"
    volumes:
      - type: volume
        source: elastic-search-data
        target: /usr/share/elasticsearch/data

volumes:
  axon-data:
  elastic-search-data:
  jeroenvm-nix-store:
    external: true

